## -*- mode: perl; -*-

my %targets = ();

%targets = (

    #—————————————————————————————————————————————————————————————————————
    # Base setting templates
    #—————————————————————————————————————————————————————————————————————

    "all-base" => {
        template         => 1,
        cflags           => combine('-isysroot $(CROSS_TOP)/SDKs/$(CROSS_SDK) -fno-common',
                                sub { ((!defined($ENV{'CONFIG_DISABLE_BITCODE'}) || $ENV{'CONFIG_DISABLE_BITCODE'} ne 'true') && defined($ENV{'SDKVERSION'}) && $ENV{'SDKVERSION'} =~ /^(9|[1-9][0-9]+)\./ && $disabled{shared})
                                        ? '-fembed-bitcode' : (); },
                            ),
    },

    #—————————————————————————————————————————————————————————————————————
    # Base cross-compiler target settings
    # - HAVE_FORK=0 for some targets lacking fork() in their SDK's.
    #—————————————————————————————————————————————————————————————————————

    "ios-base" => {
        inherit_from    => [ "all-base", "ios-common" ],
        template         => 1,
        cflags           => add(sub { defined($ENV{'IOS_MIN_SDK_VERSION'}) ? '-mios-version-min=$(IOS_MIN_SDK_VERSION)' : '-mios-version-min=13.0'; }),
    },

    "tvos-common" => {
        inherit_from    => [ "all-base", "darwin-common" ],
        template         => 1,
        cflags           => add(sub { defined($ENV{'TVOS_MIN_SDK_VERSION'}) ? '-mtvos-version-min=$(TVOS_MIN_SDK_VERSION)' : '-mtvos-version-min=13.0'; }),
        disable          => [ "shared", "async" ],
        defines          => [ "HAVE_FORK=0" ],
    },

    "watchos-common" => {
        inherit_from    => [ "all-base", "darwin-common" ],
        template         => 1,
        cflags           => add(sub { defined($ENV{'WATCH_MIN_SDK_VERSION'}) ? '-mwatchos-version-min=$(WATCH_MIN_SDK_VERSION)' : '-mwatchos-version-min=8.5'; }),
        disable          => [ "shared", "async" ],
        defines          => [ "HAVE_FORK=0" ],
    },

    "macos-base" => {
        inherit_from     => [ "all-base" ],
        template         => 1,
        cflags           => add(sub { defined($ENV{'MACOS_MIN_SDK_VERSION'}) ? '-mmacosx-version-min=$(MACOS_MIN_SDK_VERSION)' : '-mmacosx-version-min=10.15'; }),
    },


    #—————————————————————————————————————————————————————————————————————
    # watchOS
    #—————————————————————————————————————————————————————————————————————

    # Apple Watch simulator.
    "watchsimulator-arm64" => {
        inherit_from     => [ "watchos-common"],
        CFLAGS           => add("-Wall"),
        cflags           => add("-arch arm64", 
                            sub{ defined($ENV{'WATCH_MIN_SDK_VERSION'}) ? '-target arm64-apple-watchos$(WATCH_MIN_SDK_VERSION)-simulator' : '-target arm64-apple-watchos8.5-simulator';}),
        bn_ops           => "SIXTY_FOUR_BIT_LONG",
        asm_arch         => 'aarch64',
        perlasm_scheme   => "ios64",
    },

    # Apple Watch simulator.
    "watchsimulator-x86_64" => {
        inherit_from     => [ "watchos-common"],
        CFLAGS           => add("-Wall"),
        cflags           => add("-arch x86_64", 
                            sub{ defined($ENV{'WATCH_MIN_SDK_VERSION'}) ? '-target x86_64-apple-watchos$(WATCH_MIN_SDK_VERSION)-simulator' : '-target x86_64-apple-watchos8.5-simulator';}),
        bn_ops           => "SIXTY_FOUR_BIT_LONG",
        asm_arch         => 'x86_64',
        perlasm_scheme   => "macosx",
    },

    # 32-bit watchOS
    "watchos-cross-armv7k" => {
        inherit_from     => [ "watchos-common" ],
        CFLAGS           => add("-Wall"),
        cflags           => add("-arch armv7k -fno-asm"),
    },

    ## 64-bit arm64_32 watchOS
    "watchos-cross-arm64_32" => {
        inherit_from     => [ "watchos-common"],
        CFLAGS           => add("-Wall"),
        cflags           => add("-arch arm64_32"),
    },

    ## 64-bit arm64 watchOS
    "watchos-cross-arm64" => {
        inherit_from     => [ "watchos-common"],
        CFLAGS           => add("-Wall"),
        cflags           => add("-arch arm64"),
        bn_ops           => "SIXTY_FOUR_BIT_LONG",
        asm_arch         => 'aarch64',
        perlasm_scheme   => "ios64",
    },


    #—————————————————————————————————————————————————————————————————————
    # iOS (including Catalyst)
    #—————————————————————————————————————————————————————————————————————
    # x86_64 simulator
    "iossimulator-x86_64" => {
        inherit_from     => [ "ios-base" ],
        CFLAGS           => add("-Wall"),
        cflags           => add("-arch x86_64", sub { defined($ENV{'IOS_MIN_SDK_VERSION'}) ? '-target x86_64-apple-ios$(IOS_MIN_SDK_VERSION)-simulator' : '-target x86_64-apple-ios13-simulator'; }),

        lib_cppflags     => add("-DL_ENDIAN"),
        bn_ops           => "SIXTY_FOUR_BIT_LONG",
        asm_arch         => 'x86_64',
        perlasm_scheme   => "macosx",
        sys_id           => "iOS",
    },

    ## arm64 simulator
    "iossimulator-arm64" => {
        inherit_from     => [ "ios-base" ],
        CFLAGS           => add("-Wall"),
        lib_cppflags     => add("-DL_ENDIAN"),
        cflags           => add("-arch arm64", sub { defined($ENV{'IOS_MIN_SDK_VERSION'}) ? '-target arm64-apple-ios$(IOS_MIN_SDK_VERSION)-simulator' : '-target arm64-apple-ios13-simulator'; }),
        bn_ops           => "SIXTY_FOUR_BIT_LONG",
        asm_arch         => 'aarch64',
        perlasm_scheme   => "ios64",
        sys_id           => "iOS",
    },

    # iPhone and iPad from iPhone 5s era.
    "ios64-cross-arm64" => {
        inherit_from     => [ "ios-base" ],
        CFLAGS           => add("-Wall"),
        cflags           => add("-arch arm64"),
        bn_ops           => "SIXTY_FOUR_BIT_LONG RC4_CHAR",
        asm_arch         => 'aarch64',
        perlasm_scheme   => "ios64",
        sys_id           => "iOS",
    },

    # Catalyst (macOS)
    # Because it's an iOS target, we will respect the iOS bitcode setting that is inherited.
    "mac-catalyst-x86_64" => {
        inherit_from     => [ "darwin64-x86_64-cc", "all-base" ],
        cflags           => add("-arch x86_64 -target x86_64-apple-ios13.1-macabi -mios-version-min=13.1"),
        sys_id           => "MacOSX",
    },

    "mac-catalyst-arm64" => {
        inherit_from     => [ "darwin64-arm64-cc", "all-base" ],
        cflags           => add("-arch arm64 -target arm64-apple-ios13.1-macabi -mios-version-min=13.1"),
        sys_id           => "MacOSX",
    },


    #—————————————————————————————————————————————————————————————————————
    # tvOS
    #—————————————————————————————————————————————————————————————————————

    ## Apple TV simulator (x86_64)
    "tvsimulator-x86_64" => {
        inherit_from     => [ "tvos-common" ],
        CFLAGS           => add("-Wall"),
        cflags           => add("-arch x86_64", sub { defined($ENV{'TVOS_MIN_SDK_VERSION'}) ? '-target x86_64-apple-tvos$(TVOS_MIN_SDK_VERSION)-simulator' : '-target x86_64-apple-tvos13-simulator'; }),
        bn_ops           => "SIXTY_FOUR_BIT_LONG",
        asm_arch         => 'x86_64',
        perlasm_scheme   => "macosx",
    },

    ## Apple TV simulator (arm64)
    "tvsimulator-arm64" => {
        inherit_from     => [ "tvos-common" ],
        CFLAGS           => add("-Wall"),
        cflags           => add("-arch arm64", sub { defined($ENV{'TVOS_MIN_SDK_VERSION'}) ? '-target arm64-apple-tvos$(TVOS_MIN_SDK_VERSION)-simulator' : '-target arm64-apple-tvos13-simulator'; }),

        bn_ops           => "SIXTY_FOUR_BIT_LONG",
        asm_arch         => 'aarch64',
        perlasm_scheme   => "ios64",
    },

    ## Apple TV from Apple TV 4 onward.
    "tvos64-cross-arm64" => {
        inherit_from     => [ "tvos-common" ],
        CFLAGS           => add("-Wall"),
        cflags           => add("-arch arm64"),
        bn_ops           => "SIXTY_FOUR_BIT_LONG RC4_CHAR",
        asm_arch         => 'aarch64',
        perlasm_scheme   => "ios64",
    },

    #—————————————————————————————————————————————————————————————————————
    # macOS
    #—————————————————————————————————————————————————————————————————————

    ## Apple macOS (x86_64)
    "macos64-x86_64" => {
        inherit_from     => [ "darwin64-x86_64-cc", "macos-base" ],
        cflags           => add("-arch x86_64"),
        sys_id           => "macOS",
    },

    ## Apple macOS (arm64)
    "macos64-arm64" => {
        inherit_from     => [ "darwin64-arm64-cc", "macos-base" ],
        cflags           => add("-arch arm64"),
        sys_id           => "macOS",
    },

);
